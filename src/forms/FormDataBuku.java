/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package forms;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.mysql.cj.jdbc.ClientPreparedStatement;
import net.proteanit.sql.DbUtils;
import database.ClassDatabase;
/**
 *
 * @author Ario
 */
public class FormDataBuku extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormDataBuku
     */
    public FormDataBuku() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKodeBuku = new javax.swing.JTextField();
        txtJudulBuku = new javax.swing.JTextField();
        txtNamaPenulis = new javax.swing.JTextField();
        txtNamaPenerbit = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCariBuku = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTanggalTerbit = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        txtTebalHalaman = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDataBuku = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("FORM DATA BUKU");

        txtKodeBuku.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKodeBukuCaretUpdate(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Aksi");

        btnCreate.setText("CREATE");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRead.setText("READ");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("CLEAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(btnCreate)
                .addGap(18, 18, 18)
                .addComponent(btnRead)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLabel3.setText("Kode Buku");

        jLabel4.setText("Judul Buku");

        jLabel5.setText("Nama Penulis");

        jLabel6.setText("Nama Penerbit");

        jLabel7.setText("Tanggal Terbit");

        txtCariBuku.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtCariBukuCaretUpdate(evt);
            }
        });

        jLabel8.setText("Cari Buku");

        jLabel9.setText("Tebal Halaman");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txtCariBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKodeBuku, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(txtJudulBuku)
                    .addComponent(txtNamaPenulis)
                    .addComponent(txtNamaPenerbit)
                    .addComponent(txtTanggalTerbit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTebalHalaman))
                .addGap(177, 177, 177)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNamaPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNamaPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtTanggalTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTebalHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCariBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        tabelDataBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelDataBuku);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        try{
            Connection c = ClassDatabase.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT kodebuku, judulbuku, penulis, penerbit, tgl_terbit, tebal FROM buku";
            ResultSet r = s.executeQuery(sql);
            tabelDataBuku.setModel(DbUtils.resultSetToTableModel(r));
        }catch(SQLException s){
            System.out.println(s);
        }
    }//GEN-LAST:event_btnReadActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String kodeBuku = this.txtKodeBuku.getText();
        String judulBuku = this.txtJudulBuku.getText();
        String namaPenulis = this.txtNamaPenulis.getText();
        String namaPenerbit = this.txtNamaPenerbit.getText();
        java.util.Date tglTerbit = (java.util.Date) this.txtTanggalTerbit.getDate();
        String tebalHalaman = this.txtTebalHalaman.getText();
        
        if(txtKodeBuku.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Maaf, field kode buku tidak boleh kosong.");
        }else{
            if(txtJudulBuku.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Maaf, field judul buku tidak boleh kosong.");
            }else{
                if(txtNamaPenulis.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Maaf, field nama penulis tidak boleh kosong.");
                }else{
                    if(txtNamaPenerbit.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this, "Maaf, field nama penerbit tidak boleh kosong.");
                    }else{
                        if(txtTanggalTerbit.getDate() == null){
                            JOptionPane.showMessageDialog(this, "Maaf, field tanggal terbit tidak boleh kosong.");
                        }else{
                            if(txtTebalHalaman.getText().isEmpty()){
                                JOptionPane.showMessageDialog(this, "Maaf, field tebal halaman tidak boleh kosong.");
                            }else{
                                try{
                                    Connection c = ClassDatabase.getKoneksi();
                                    String sql = "INSERT INTO buku VALUES(?,?,?,?,?,?)";
                                    ClientPreparedStatement r = (ClientPreparedStatement) c.prepareStatement(sql);
                                    r.setString(1, kodeBuku);
                                    r.setString(2, judulBuku);
                                    r.setString(3, namaPenulis);
                                    r.setString(4, namaPenerbit);
                                    r.setDate(5, new java.sql.Date(tglTerbit.getTime()));
                                    r.setString(6, tebalHalaman);
                                    r.executeUpdate();
                                    r.close();
                                    JOptionPane.showMessageDialog(this, "Sukses tambah data");
                                }catch(SQLException s){
                                    System.out.println(s);
                                }finally{
                                    
                                }
                                try{
                                    Connection c = ClassDatabase.getKoneksi();
                                    Statement s = c.createStatement();
                                    String sql = "SELECT kodebuku, judulbuku, penulis, penerbit, tgl_terbit, tebal FROM buku";
                                    ResultSet r = s.executeQuery(sql);
                                    tabelDataBuku.setModel(DbUtils.resultSetToTableModel(r));
                                }catch(SQLException s){
                                    System.out.println(s);
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String kodeBuku = this.txtKodeBuku.getText();
        String judulBuku = this.txtJudulBuku.getText();
        String namaPenulis = this.txtNamaPenulis.getText();
        String namaPenerbit = this.txtNamaPenerbit.getText();
        java.util.Date tglTerbit = (java.util.Date) this.txtTanggalTerbit.getDate();
        String tebalHalaman = this.txtTebalHalaman.getText();
        
        if(txtKodeBuku.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Maaf, field kode buku tidak boleh kosong.");
        }else{
            if(txtJudulBuku.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Maaf, field judul buku tidak boleh kosong.");
            }else{
                if(txtNamaPenulis.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Maaf, field nama penulis tidak boleh kosong.");
                }else{
                    if(txtNamaPenerbit.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this, "Maaf, field nama penerbit tidak boleh kosong.");
                    }else{
                        if(txtTanggalTerbit.getDate() == null){
                            JOptionPane.showMessageDialog(this, "Maaf, field tanggal terbit tidak boleh kosong.");
                        }else{
                            if(txtTebalHalaman.getText().isEmpty()){
                                JOptionPane.showMessageDialog(this, "Maaf, field tebal halaman tidak boleh kosong.");
                            }else{
                                try{
                                    Connection c = ClassDatabase.getKoneksi();
                                    String sql = "UPDATE `myjavaproject`.`buku` SET `judulbuku`=?, `penulis`=?, `penerbit`=?, `tgl_terbit`=?, `tebal`=? WHERE kodebuku=?";
                                    ClientPreparedStatement r = (ClientPreparedStatement) c.prepareStatement(sql);
                                    r.setString(6, kodeBuku);
                                    r.setString(1, judulBuku);
                                    r.setString(2, namaPenulis);
                                    r.setString(3, namaPenerbit);
                                    r.setDate(4, new java.sql.Date(tglTerbit.getTime()));
                                    r.setString(5, tebalHalaman);
                                    r.executeUpdate();
                                    r.close();
                                    JOptionPane.showMessageDialog(this, "Sukses edit data");
                                }catch(SQLException s){
                                    System.out.println(s);
                                }finally{
                                    
                                }
                                try{
                                    Connection c = ClassDatabase.getKoneksi();
                                    Statement s = c.createStatement();
                                    String sql = "SELECT kodebuku, judulbuku, penulis, penerbit, tgl_terbit, tebal FROM buku";
                                    ResultSet r = s.executeQuery(sql);
                                    tabelDataBuku.setModel(DbUtils.resultSetToTableModel(r));
                                }catch(SQLException s){
                                    System.out.println(s);
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String kodeBuku = this.txtKodeBuku.getText();
        if(txtKodeBuku.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Maaf, field kode buku tidak boleh kosong.");
        }else{
            try{
                Connection c = ClassDatabase.getKoneksi();
                String sql = "DELETE FROM buku WHERE kodebuku=?";
                ClientPreparedStatement p = (ClientPreparedStatement) c.prepareStatement(sql);
                p.setString(1, kodeBuku);
                p.executeUpdate();
                p.close();
                JOptionPane.showMessageDialog(this, "Sukses hapus data.");
            }catch(SQLException s){
                System.out.println(s);
            }finally{
                
            }
            try{
                Connection c = ClassDatabase.getKoneksi();
                Statement s = c.createStatement();
                String sql = "SELECT kodebuku, judulbuku, penulis, penerbit, tgl_terbit, tebal FROM buku";
                ResultSet r = s.executeQuery(sql);
                
                tabelDataBuku.setModel(DbUtils.resultSetToTableModel(r));
            }catch(SQLException s){
                System.out.println(s);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtKodeBukuCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKodeBukuCaretUpdate
        try{
            Connection c = ClassDatabase.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM buku WHERE kodebuku='" + this.txtKodeBuku.getText() + "'";
            ResultSet r = s.executeQuery(sql);
            while(r.next()){
                this.txtJudulBuku.setText(r.getString(2));
                this.txtNamaPenulis.setText(r.getString("penulis"));
                this.txtNamaPenerbit.setText(r.getString("penerbit"));
                this.txtTanggalTerbit.setDate(r.getDate("tgl_terbit"));
                this.txtTebalHalaman.setText(r.getString("tebal"));
            }
            r.close();
            s.close();
        }catch(SQLException s){
            System.out.println(s);
        }
    }//GEN-LAST:event_txtKodeBukuCaretUpdate

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtKodeBuku.setText("");
        txtJudulBuku.setText("");
        txtNamaPenulis.setText("");
        txtNamaPenerbit.setText("");
        txtTanggalTerbit.setDate(null);
        txtTebalHalaman.setText("");
        txtKodeBuku.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCariBukuCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtCariBukuCaretUpdate
        DefaultTableModel shownTable = new DefaultTableModel();
        shownTable.addColumn("kodebuku");
        shownTable.addColumn("judulbuku");
        shownTable.addColumn("penulis");
        shownTable.addColumn("penerbit");
        shownTable.addColumn("tgl_terbit");
        shownTable.addColumn("tebal");
        try{
            Connection c = ClassDatabase.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM buku WHERE kodebuku LIKE '%" + txtCariBuku.getText() + "%'" + "OR judulbuku LIKE '%" + txtCariBuku.getText() + "%'" + "OR penulis LIKE '%" + txtCariBuku.getText() + "%'" + "OR penerbit LIKE '%" + txtCariBuku.getText() + "%'" + "OR tgl_terbit LIKE '%" + txtCariBuku.getText() + "%'" + "OR tebal LIKE '%" + txtCariBuku.getText() + "%'";
            ResultSet r = s.executeQuery(sql);
            while(r.next()){
                shownTable.addRow(new Object[]{
                    r.getString(1), r.getString(2), r.getString(3), r.getString(4), r.getString(5), r.getString(6)
                });
            }
            tabelDataBuku.setModel(shownTable);
        }catch(SQLException s){
            System.out.println(s);
        }
    }//GEN-LAST:event_txtCariBukuCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelDataBuku;
    private javax.swing.JTextField txtCariBuku;
    private javax.swing.JTextField txtJudulBuku;
    private javax.swing.JTextField txtKodeBuku;
    private javax.swing.JTextField txtNamaPenerbit;
    private javax.swing.JTextField txtNamaPenulis;
    private com.toedter.calendar.JDateChooser txtTanggalTerbit;
    private javax.swing.JTextField txtTebalHalaman;
    // End of variables declaration//GEN-END:variables
}
